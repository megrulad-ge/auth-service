openapi: 3.0.0
paths:
  /api/v1/health:
    get:
      operationId: HealthController_getHealth
      parameters: []
      responses:
        '200':
          description: Health check
          content:
            application/json:
              schema:
                type: object
                example:
                  status: alive
                properties:
                  status:
                    type: string
                    example: alive
      tags:
        - Health
  /api/v1/sign-up:
    post:
      operationId: AuthController_signUp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
      responses:
        '201':
          description: Returns CREATED when the resource successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpResponse'
        '400':
          description: Returns BAD_REQUEST when the payload is invalid or malformed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Returns UNPROCESSABLE_ENTITY when the user already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_0
        - Authentication
  /api/v1/sign-in:
    post:
      operationId: AuthController_signIn
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInRequest'
      responses:
        '200':
          description: Returns SUCCESS when the request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInResponse'
        '400':
          description: Returns BAD_REQUEST when the payload is invalid or malformed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Returns UNAUTHORIZED when the credentials are invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Returns NOT_FOUND when the user does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Returns UNPROCESSABLE_ENTITY when the user is not active
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_0
  /api/v1/sign-out:
    post:
      operationId: AuthController_signOut
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignOutRequest'
      responses:
        '202':
          description: Returns ACCEPTED when the sign out request is successful
      tags: *ref_0
  /api/v1/.well-known/public-key:
    get:
      operationId: AuthController_getPublicKey
      parameters: []
      responses:
        '200':
          description: Returns the public key used to verify the JWT signature
      tags: *ref_0
  /api/v1/users/profile:
    get:
      operationId: UsersController_getProfile
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Users
      security:
        - bearer: []
  /api/v1/session/refresh:
    post:
      operationId: SessionController_refresh
      parameters: []
      responses:
        '200':
          description: Returns SUCCESS when the request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshResponse'
        '400':
          description: Returns BAD_REQUEST when the payload is invalid or malformed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Returns UNAUTHORIZED when the token is invalid or expired
      tags: &ref_1
        - Session
      security:
        - bearer: []
  /api/v1/session/extend:
    put:
      operationId: SessionController_extend
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendRequest'
      responses:
        '200':
          description: Returns SUCCESS when the request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendResponse'
        '400':
          description: Returns BAD_REQUEST when the payload is invalid or malformed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Returns NOT_FOUND when the requested resource is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_1
info:
  title: Auth Service
  description: Authentication service
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
      name: JWT
      description: Enter JWT auth token
      in: header
  schemas:
    SignUpRequest:
      type: object
      properties:
        username:
          type: string
          description: The username of the user
          example: john
        password:
          type: string
          description: The password of the user
          example: password
        confirmPassword:
          type: string
          description: The password confirmation of the user
          example: password
      required:
        - username
        - password
        - confirmPassword
    SignUpResponse:
      type: object
      properties:
        uuid:
          type: uuid
          example: d0f5c2c0-0f8a-4f1a-8f0a-2b5b8a0e1c1e
        username:
          type: string
          example: user-123
      required:
        - uuid
        - username
    ErrorResponse:
      type: object
      properties:
        statusCode:
          type: number
          description: HTTP status code
        message:
          type: string
          description: Error message
        details:
          type: object
          description: Error details
      required:
        - statusCode
        - message
    SignInRequest:
      type: object
      properties:
        username:
          type: string
          description: The username of the user
          example: john
        password:
          type: string
          description: The password of the user
          example: password
      required:
        - username
        - password
    SignInResponse:
      type: object
      properties:
        accessToken:
          type: string
          example: aaa.bbb.ccc
        expiresIn:
          type: number
          example: 3600
        refreshToken:
          type: string
          example: aaa.bbb.ccc
        refreshTokenExpiresIn:
          type: number
          example: 86400
        roles:
          example:
            - Admin
            - User
            - Guest
          type: array
          items:
            type: string
      required:
        - accessToken
        - expiresIn
        - refreshToken
        - refreshTokenExpiresIn
        - roles
    SignOutRequest:
      type: object
      properties:
        refreshToken:
          type: string
          description: Deactivates the refresh token of the user
      required:
        - refreshToken
    RefreshResponse:
      type: object
      properties:
        accessToken:
          type: string
          example: aaa.bbb.ccc
        expiresIn:
          type: number
          example: 3600
      required:
        - accessToken
        - expiresIn
    ExtendRequest:
      type: object
      properties:
        refreshToken:
          type: uuid
          example: d0f5c2c0-0f8a-4f1a-8f0a-2b5b8a0e1c1e
      required:
        - refreshToken
    ExtendResponse:
      type: object
      properties:
        accessToken:
          type: string
          example: aaa.bbb.ccc
        expiresIn:
          type: number
          example: 3600
      required:
        - accessToken
        - expiresIn
